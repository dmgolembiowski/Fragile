{'all': {'Fragile': {'projectName': 'Fragile', 'project_description': ['A Curses terminal application based on Office 365 brilliant Kanban board web interface.'], 'startDate': datetime.date(2019, 5, 13), 'finishDate': datetime.date(2019, 7, 31), 'features': {'feature_title': 'Dynamically render new sub-hierarchal level multi-page forms', 'feature_difficulty': 7.0, 'feature_finishDate': datetime.date(2019, 7, 8), 'feature_points': 16.0, 'feature_priority': '(Not objective... rather "Task")Need to find a way to add new (child) pages to branch off of the already made base template of 1-Feature, 2-Objective, 3-Step hierarchy.Like maybe it should be accessible only by tabbing down to the end of the page and then entering L/R on the keypad to highlight an option like "Add <Feature>/<Objective>/<Step>" based on the depth currently being edited.', 'feature_notes': None, 'tasks': [{'task_title': 'Program an intuive interface for adding tasks to the parent "Feature" item', 'task_finishDate': datetime.date(2019, 6, 29), 'task_points': 24.0, 'task_priority': 'High', 'task_notes': "This item's label applies to the same programming functionality as the one below it. So... halve the points for this task? Double them? I dunno.", 'steps': [{'step_title': 'Experiment with changing the Menu\'s "Create a New Project" option to a route that is just a tree', 'step_complete': [1], 'step_finishDate': datetime.date(2019, 6, 26), 'step_points': 4.0, 'step_priority': 'High', 'step_notes': '(Actually, bigger priority, fix the "(Optional Notes)" box so that it can actually go back to the previous item on the page.'}]}]}}, 'Debugging1': {'projectName': 'Debugging1', 'project_description': ['Quality of life UI improvements along with some data storage <-> data retrieval bug fixes.'], 'startDate': datetime.date(2019, 6, 24), 'finishDate': datetime.date(2019, 6, 24), 'features': {'feature_title': 'Saving things to their proper places', 'feature_difficulty': 1.0, 'feature_finishDate': datetime.date(2019, 6, 24), 'feature_points': 2.0, 'feature_priority': [0], 'feature_notes': [], 'tasks': [{'task_title': 'Read the source code, identify value errors', 'task_finishDate': datetime.date(2019, 6, 25), 'task_points': 2.0, 'task_priority': [0], 'task_notes': ['Easy enough'], 'steps': [{'step_title': 'Make sure the proper form is being saved so that reloading works', 'step_complete': [1], 'step_finishDate': datetime.date(2019, 6, 25), 'step_points': 2.0, 'step_priority': [0], 'step_notes': None}]}]}}, 'asdf': {'projectName': 'asdf', 'project_description': [], 'startDate': '', 'finishDate': '', 'features': {'feature_title': 'asdf', 'feature_difficulty': 0.0, 'feature_finishDate': '', 'feature_points': 0.0, 'feature_priority': [0], 'feature_notes': [], 'tasks': [{'task_title': 'asdf', 'task_finishDate': '', 'task_points': 0.0, 'task_priority': [0], 'task_notes': [], 'steps': [{'step_title': 'asdf', 'step_complete': [1], 'step_finishDate': '', 'step_points': 0.0, 'step_priority': [0], 'step_notes': None}]}]}}, 'fdsa': {'projectName': 'fdsa', 'project_description': [], 'startDate': '', 'finishDate': '', 'features': {'feature_title': 'fdsa', 'feature_difficulty': 0.0, 'feature_finishDate': '', 'feature_points': 0.0, 'feature_priority': [0], 'feature_notes': [], 'tasks': [{'task_title': 'fdsa', 'task_finishDate': '', 'task_points': 0.0, 'task_priority': [0], 'task_notes': [], 'steps': [{'step_title': 'fdsa', 'step_complete': [1], 'step_finishDate': '', 'step_points': 0.0, 'step_priority': [0], 'step_notes': None}]}]}}, '': {'projectName': '', 'project_description': [], 'startDate': '', 'finishDate': '', 'features': {'feature_title': '', 'feature_difficulty': 0.0, 'feature_finishDate': '', 'feature_points': 0.0, 'feature_priority': [0], 'feature_notes': [], 'tasks': [{'task_title': '', 'task_finishDate': '', 'task_points': 0.0, 'task_priority': [0], 'task_notes': [], 'steps': [{'step_title': '', 'step_complete': [1], 'step_finishDate': '', 'step_points': 0.0, 'step_priority': [0], 'step_notes': None}]}]}}, 'Java Deque Implementation': {'projectName': 'Java Deque Implementation', 'project_description': ['Learning to build Java datastructures by writing a beginner-esque implementation of all things collections.deque; up to and including the functions and attributes for a class instance.'], 'startDate': datetime.date(2019, 7, 28), 'finishDate': datetime.date(2019, 7, 30), 'features': {'feature_title': 'idk, just do it', 'feature_difficulty': 5.0, 'feature_finishDate': datetime.date(2019, 7, 30), 'feature_points': 6.0, 'feature_priority': [2], 'feature_notes': ['Basically doing this to learn the Javas.'], 'tasks': [{'task_title': '', 'task_finishDate': '', 'task_points': 0.0, 'task_priority': [0], 'task_notes': [], 'steps': [{'step_title': '', 'step_complete': [1], 'step_finishDate': '', 'step_points': 0.0, 'step_priority': [0], 'step_notes': None}]}]}}, 'h': {'projectName': 'h', 'project_description': [], 'startDate': '', 'finishDate': '', 'features': {'feature_title': '', 'feature_difficulty': 0.0, 'feature_finishDate': '', 'feature_points': 0.0, 'feature_priority': [0], 'feature_notes': [], 'tasks': [{'task_title': '', 'task_finishDate': '', 'task_points': 0.0, 'task_priority': [0], 'task_notes': [], 'steps': [{'step_title': '', 'step_complete': [1], 'step_finishDate': '', 'step_points': 0.0, 'step_priority': [0], 'step_notes': None}]}]}}, 'i': {'projectName': 'i', 'project_description': [], 'startDate': '', 'finishDate': '', 'features': {'feature_title': '', 'feature_difficulty': 0.0, 'feature_finishDate': '', 'feature_points': 0.0, 'feature_priority': [0], 'feature_notes': [], 'tasks': [{'task_title': '', 'task_finishDate': '', 'task_points': 0.0, 'task_priority': [0], 'task_notes': [], 'steps': [{'step_title': '', 'step_complete': [1], 'step_finishDate': '', 'step_points': 0.0, 'step_priority': [0], 'step_notes': None}]}]}}, 'cam': {'projectName': 'cam', 'project_description': [], 'startDate': '', 'finishDate': '', 'features': {'feature_title': '', 'feature_difficulty': 0.0, 'feature_finishDate': '', 'feature_points': 0.0, 'feature_priority': [0], 'feature_notes': [], 'tasks': [{'task_title': '', 'task_finishDate': '', 'task_points': 0.0, 'task_priority': [0], 'task_notes': [], 'steps': [{'step_title': '', 'step_complete': [1], 'step_finishDate': '', 'step_points': 0.0, 'step_priority': [0], 'step_notes': None}]}]}}}, 'names': {'', 'Java Deque Implementation', 'asdf', 'i', 'cam', 'fdsa', 'h', 'Debugging1', 'Fragile'}}